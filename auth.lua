--[[
    SISTEMA DE AUTENTICA√á√ÉO COM SYN.REQUEST
    
    Usa syn.request para requisi√ß√µes HTTP GET
    Compat√≠vel com executores que suportam syn.request
]]

-- ===============================
-- CONFIGURA√á√ÉO DA KEY
-- ===============================
getgenv().KEY = getgenv().KEY or ""

-- Valida√ß√µes iniciais
assert(getgenv().KEY ~= "", "Chave n√£o definida! Defina getgenv().KEY antes de executar.")
assert(gethwid, "Fun√ß√£o gethwid() n√£o encontrada no executor")
assert(syn and syn.request, "syn.request n√£o encontrado! Este executor n√£o suporta syn.request")

local KEY = getgenv().KEY
local HWID = gethwid()

local function verifyKey()
    local url = ("https://server-dun-six.vercel.app/api/HWIDCheck?key=%s&hwid=%s"):format(KEY, HWID)
    
    print("üîê Verificando autentica√ß√£o com syn.request...")
    print("Key:", KEY)
    print("HWID:", HWID)
    
    local success, response = pcall(function()
        return syn.request({
            Url = url,
            Method = "GET",
            Headers = {
                ["Content-Type"] = "application/json"
            }
        })
    end)
    
    if not success then
        warn("‚ùå Erro na requisi√ß√£o HTTP:", response)
        return false, "Erro de conex√£o"
    end
    
    -- Verificar se a requisi√ß√£o foi bem-sucedida
    if response.StatusCode ~= 200 then
        warn("‚ùå Erro HTTP:", response.StatusCode, response.StatusMessage)
        return false, "Erro HTTP: " .. response.StatusCode
    end
    
    local data = nil
    local ok, err = pcall(function()
        data = game:GetService("HttpService"):JSONDecode(response.Body)
    end)
    
    if not ok then
        warn("‚ùå Erro ao decodificar JSON:", err)
        return false, "Resposta inv√°lida"
    end
    
    if data.success then
        if data.action == "HWID vinculado" then
            print("‚úÖ HWID vinculado com sucesso!")
        else
            print("‚úÖ Chave e HWID validados com sucesso!")
        end
        return true
    else
        warn("‚ùå Falha na verifica√ß√£o:", data.error or "Erro desconhecido")
        return false, data.error
    end
end

-- ===============================
-- EXECU√á√ÉO PRINCIPAL
-- ===============================
local valid, err = verifyKey()

if valid then
    print("üöÄ Autentica√ß√£o bem-sucedida!")
    print("Executando script principal...")
    
    -- ===============================
    -- SEU SCRIPT PRINCIPAL AQUI
    -- ===============================
    
    -- Exemplo de uso
    print("‚ú® Script premium executado com sucesso!")
    
    -- Aqui voc√™ pode colocar:
    -- loadstring(game:HttpGet("https://raw.githubusercontent.com/seu-repo/script.lua"))()
    
else
    print("‚ö†Ô∏è Falha na autentica√ß√£o:", err)
    print("Executando script alternativo...")
    
    -- ===============================
    -- SCRIPT ALTERNATIVO (OPCIONAL)
    -- ===============================
    
    print("üí° Executando vers√£o gratuita...")
    print("Para acessar recursos premium, entre em contato para obter uma key v√°lida.")
end
